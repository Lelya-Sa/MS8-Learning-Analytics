name: Frontend CI/CD (Vercel)

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci-cd.yml'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'frontend/**'

env:
  NODE_VERSION: '18'
  WORKING_DIR: './frontend'

jobs:
  lint-and-test:
    name: 🧪 Lint & Test Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIR }}/package-lock.json

      - name: 📥 Install dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: npm ci

      - name: 🔍 Run linting (if available)
        working-directory: ${{ env.WORKING_DIR }}
        run: npm run lint || echo "No lint script found"
        continue-on-error: true

      - name: 🧪 Run tests
        working-directory: ${{ env.WORKING_DIR }}
        run: npm run test:ci
        env:
          NODE_ENV: test
          CI: true

      - name: 📊 Upload coverage
        if: always()
        uses: codecov/codecov-action@v3
        with:
          file: ${{ env.WORKING_DIR }}/coverage/lcov.info
          flags: frontend
          name: frontend-coverage
          fail_ci_if_error: false

  build-production:
    name: 🏗️ Build Production
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.event_name == 'push'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIR }}/package-lock.json

      - name: 📥 Install dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          echo "Installing dependencies..."
          npm ci
          echo "Verifying vite installation..."
          npm list vite || echo "Vite not found in node_modules"
          which vite || echo "Vite command not in PATH"
          ls -la node_modules/.bin/ | grep vite || echo "No vite binary found"

      - name: 🏗️ Build production bundle
        working-directory: ${{ env.WORKING_DIR }}
        run: npm run build
        env:
          NODE_ENV: production
          CI: true

      - name: 📊 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: ${{ env.WORKING_DIR }}/dist/
          retention-days: 7

      - name: 📦 Analyze bundle size
        run: |
          echo "Build artifacts uploaded"
          du -sh ${{ env.WORKING_DIR }}/dist/ || true

  deploy-preview:
    name: 🎨 Deploy Preview (Vercel)
    runs-on: ubuntu-latest
    needs: build-production
    if: github.event_name == 'pull_request'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🎨 Deploy to Vercel (Preview)
        id: vercel-preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--debug'
          working-directory: ${{ env.WORKING_DIR }}
          scope: ${{ secrets.VERCEL_ORG_ID }}

      - name: 💬 Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const body = `✅ **Frontend Preview Deployed**

            **Preview URL**: ${{ steps.vercel-preview.outputs.preview-url }}
            
            The frontend has been deployed and is ready for review!`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })

  deploy-production:
    name: 🚀 Deploy Production (Vercel)
    runs-on: ubuntu-latest
    needs: build-production
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://ms8-learning-analytics-frontend.vercel.app
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Deploy to Vercel (Production)
        id: vercel-production
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ${{ env.WORKING_DIR }}
          scope: ${{ secrets.VERCEL_ORG_ID }}

      - name: ✅ Verify deployment
        run: |
          echo "Frontend deployed to production"
          echo "URL: https://ms8-learning-analytics-frontend.vercel.app"

      - name: 🏥 Test production URL
        run: |
          sleep 5
          curl -f https://ms8-learning-analytics-frontend.vercel.app || echo "Production URL not yet available"
        continue-on-error: true
