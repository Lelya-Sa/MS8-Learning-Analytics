name: Test Cloud Deployment

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test-cloud-deployment:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          frontend/package-lock.json
          backend/package-lock.json
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
        
    - name: Run frontend tests against cloud deployment
      env:
        # Cloud environment variables (these should be set in GitHub Secrets)
        RAILWAY_API_URL: ${{ secrets.RAILWAY_URL }}  # Just the Railway URL, /api will be added automatically
        VERCEL_URL: ${{ secrets.VERCEL_URL }}
        TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
        TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        NODE_ENV: test
        CI: true
      run: |
        cd frontend
        npm test -- --run src/test/api-integration.test.js --coverage
        
    - name: Run backend tests
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        TEST_USER_PASSWORD: ${{ secrets.TEST_PASSWORD }}
        NODE_ENV: test
      run: |
        cd backend
        npm test -- --coverage
        
    - name: Run E2E tests against cloud deployment
      env:
        RAILWAY_API_URL: ${{ secrets.RAILWAY_URL }}
        VERCEL_URL: ${{ secrets.VERCEL_URL }}
        TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
        TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
        NODE_ENV: test
        CI: true
      run: |
        cd frontend
        npm run test:e2e || echo "E2E tests not configured yet"
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          frontend/coverage/
          backend/coverage/
          frontend/test-results/
          backend/test-results/
        retention-days: 30
      continue-on-error: true
